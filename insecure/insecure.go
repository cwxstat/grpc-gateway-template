package insecure

import (
	"crypto/tls"
	"crypto/x509"
	"log"
)

const certPEM = `-----BEGIN CERTIFICATE-----
MIIEUDCCAzigAwIBAgIUCwjfsUnCWPQfCRteVVdiAcu7D4YwDQYJKoZIhvcNAQEL
BQAwVTELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0V4YW1wbGUxFTATBgNVBAcTDFBl
bm5zeWx2YW5pYTEQMA4GA1UEChMHRXhhbXBsZTELMAkGA1UECxMCVVMwHhcNMjIw
NDE3MTk1OTAwWhcNNDIwNDEyMTk1OTAwWjBVMQswCQYDVQQGEwJVUzEQMA4GA1UE
CBMHRXhhbXBsZTEVMBMGA1UEBxMMUGVubnN5bHZhbmlhMRAwDgYDVQQKEwdFeGFt
cGxlMQswCQYDVQQLEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AL4qdsFwyoarjJmCjK+mqDRMHhAAwwGaWGrYWPg4hvkzX82X+TAr1CRLfMx3XeMK
9bL0w9YUOug/ctY87+oBGx011nb3jZqzH7RF1CP5Y129w/N95Qio873rm2jhmhTO
kNhqSjIxColV11IAn3ZZvS6192F7NYVdzrXh4l+g0e9K/Q6TYX8EoQR+sdKZAG+e
ycpn9EN37GV0P7HBGkLtGZW4pmthFCXQkHYmfjwfVJxEMtvlE0xz32eMQ5W8Canl
YsWJllp3ptIQ5ditbwSvQGt3C8VqG7N4ZsrfwgKnCE3gMZYAZkvFK8ahB5ndTMjg
6eZ6V1PLmx0oeUTzcgwhMPUCAwEAAaOCARYwggESMA4GA1UdDwEB/wQEAwIFoDAd
BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNV
HQ4EFgQUFi1aCbq5LGqWRd62f+hUeSTMQY4wgbMGA1UdEQSBqzCBqIIFcHJvdG+C
H3Byb3RvLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWyCEXByb3RvLmRlZmF1bHQu
c3Zjgglsb2NhbGhvc3SCEHByb3RvLnBpZ2JvdC5zdmOCHnByb3RvLnBpZ2JvdC5z
dmMuY2x1c3Rlci5sb2NhbIcEfwAAAYcEIm9cG4cEIm/V/ocEIm9XKYcEI8pYs4cE
Im9j6YcEInrhTIcEAAAAADANBgkqhkiG9w0BAQsFAAOCAQEAAENfO5aS5UqFO8QC
sbMDRL/8ksxPQ3qSneRpO/GumdNK19V6FYHNVYpPUd+/PMApJKCOCPokItbMEN4Y
DZ82FjfWFBOsQI3+QNIwDMhyws4GqXCfvBnlFIH/xP9y4nHS6CY2Xv91Y3qnmxIu
BAtvQVyK+3mcOS+dsnKbGnkdGUrkdesVf7AcPbYEoeeByw2Wgf6U+ct2aD1nQm2u
nTKnJ0FuGyF/jA8BBGZ9zyZs20CIE+ITbOCWhSiqhD0yBx+kjr0lddxlM9U4G6E1
RuGzGbvixVH6Rb5PZ0dKXFBlkvcHfnMzD4fJrwVA9gUhuIVWeXf5PEm/yZ8TT0D2
wMTsNQ==
-----END CERTIFICATE-----
`

const keyPEM = `-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAvip2wXDKhquMmYKMr6aoNEweEADDAZpYathY+DiG+TNfzZf5
MCvUJEt8zHdd4wr1svTD1hQ66D9y1jzv6gEbHTXWdveNmrMftEXUI/ljXb3D833l
CKjzveubaOGaFM6Q2GpKMjEKiVXXUgCfdlm9LrX3YXs1hV3OteHiX6DR70r9DpNh
fwShBH6x0pkAb57Jymf0Q3fsZXQ/scEaQu0Zlbima2EUJdCQdiZ+PB9UnEQy2+UT
THPfZ4xDlbwJqeVixYmWWnem0hDl2K1vBK9Aa3cLxWobs3hmyt/CAqcITeAxlgBm
S8UrxqEHmd1MyODp5npXU8ubHSh5RPNyDCEw9QIDAQABAoIBABv7DYw692HHXiG8
Rs0VnYxMYuQB6K+UsUvPV4/2aU3DlGYg5WaEHGvWu58uNR9SHoLdZu9Z/KztoQ0K
3FY3IXEz2cGZfTl0/8Y7vBIrAMbrRCjQrmGO0oZwY2aUQ2KqXj+prA8kjiNVASCs
vMniPGbiGWs7gM2F1wOGIBPoCtvFkLInkhWOeHrxpOL3BG1OqHEPRVf9f5oU6OH9
lnDSNCqZGpWGWowOGu3kjQfwTAfBSxyLJ53D5YnNtz/qU3zOgwuH3surrn14b32U
pIG1hpEP3arOhYqVojiR4qGq4uc3Za7XF1X7KQmswO94O8HiPLwd7AOgRxQewGjt
c8DfkeUCgYEAyYkoxRz2HjSKt3QiW4uaVpsQmgKoMjf/XRFuh/3i0XnVo+7Xaeez
1B2fdGKCHwjhMhDZG7wTJO6m62W5KCPORePFuvc52ecfRmiaBRMMb9NQ6h27XmEb
bmQ4g4hCkx/+VeWCUiS9bOrmTVfEmHug6GGHbkmpDMYgDKEYp3KZ0m8CgYEA8Y6z
emYGLIwzKol5Lqo4fX4yGGhl+MnPLNRzKRpp9cojmHbwFZdE0sCOLo13Z/ZEvgDa
Gyqo51iN0KvJxBr4WRCElcPc0TbmIO/z7QcBjnLCG1GcGAGMEjn/RWRzQZgeT2DU
JFFwvc0APWy6S2HFhlQOmJyk8Jv0lEIA18I+lNsCgYBm7Z0b5qmwTYdXIIH3nTnq
53E4Jwk99KmAH8oCvGDeOUoqWm48EXEfcS2h5DmunftddYtchdaFMzme2aoR3Q+Z
VDYFQgSSzF6FuCCJXOwqJJObrimmjxPScm8Ghk3yFBHyTrAbQdZYzTNn5t5qPiG0
7TKc2hPziTCPIquTwYzcEwKBgQDAKe3N6Wvv9Hif1k15OiFGdCYWFLdKfAE8gKY8
hK7WwcAfgj7sbjJqFpUFo7TiF6AIJ1VbV0yW/nOTFZalU29OKz3OhsocBbh9a2Z5
oaEzWUfhw8KRtmlf9pOE+KxX+lPigf1CByfRVkxikSSC43znp+cUsUjlwKuJZhiV
jAmNEQKBgFZ3JNl2zgLfOzmkzXunT2QEv3sOXoDdlCPEKTVkH1o8PGawO9iRduHs
hN14e7D8OOphhz10FCas1QHsnAAH3RiynaxXjlk1ZKj9ISx8eXidGzEeuo9oH/uC
O8CIm1RALKRNvxf2GNbjYdIRvpgvyI+UnWaRl6/xRNhC0qcC2zOW
-----END RSA PRIVATE KEY-----
`

var (
	// Cert is a self signed certificate
	Cert tls.Certificate
	// CertPool contains the self signed certificate
	CertPool *x509.CertPool
)

func init() {
	var err error
	Cert, err = tls.X509KeyPair([]byte(certPEM), []byte(keyPEM))
	if err != nil {
		log.Fatalln("Failed to parse key pair:", err)
	}
	Cert.Leaf, err = x509.ParseCertificate(Cert.Certificate[0])
	if err != nil {
		log.Fatalln("Failed to parse certificate:", err)
	}

	CertPool = x509.NewCertPool()
	CertPool.AddCert(Cert.Leaf)
}
