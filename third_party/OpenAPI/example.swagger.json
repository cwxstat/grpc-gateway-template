{
  "swagger": "2.0",
  "info": {
    "title": "example.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "NamespaceService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/namespaces": {
      "get": {
        "summary": "List namespaces",
        "description": "List all namespaces in clusters",
        "operationId": "NamespaceService_ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/exampleNamespace"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of exampleNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Namespaces"
        ]
      },
      "post": {
        "summary": "Create a namespace",
        "description": "Create a namespace on the cluster.",
        "operationId": "NamespaceService_CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleCreateNamespaceRequest"
            }
          }
        ],
        "tags": [
          "Namespaces"
        ]
      }
    },
    "/api/v1/namespaces/{name}": {
      "get": {
        "summary": "Get a namespace by its name",
        "description": "Gets a namespace from the cluster.",
        "operationId": "NamespaceService_GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Namespaces"
        ]
      },
      "delete": {
        "summary": "Delete a namespace by its name",
        "description": "Deletes a namespace from the cluster.",
        "operationId": "NamespaceService_DeleteNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Namespaces"
        ]
      }
    }
  },
  "definitions": {
    "exampleCreateNamespaceRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "exampleNamespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "gRPC-gateway boilerplate repository",
    "url": "https://github.com/cwxstat/grpc-gateway-template"
  }
}
